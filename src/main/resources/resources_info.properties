group=Creates a group role and a group resource. \
A group represents a set of human users, a collection of groups, or a combination of groups and layers.

layer=Creates a layer resource and a layer role. \
  A layer represents a set of hosts. A layer also can represent an application and its running environment (a host).

user=Create a user role and a user resource. A user represents a human user.

host=Create a layer resource and a layer role. \
  A layer represents a set of hosts. A layer also can represent an application and its running environment (a host).

webservice=Create a webservice resource. A webservice represents a web service endpoint, \
  typically an HTTP(S) service. A webservice can perform work and generate values that your applications need to \
  acquire. You declare a webservice to manage access to the service. Access to the resource is set in \
  the permission statements.


variable=Variable creates a resource for storing a secret value in Conjur. \
  Use the !variable statement to declare a named resource that will hold a secret value. \
  The variable id is the name used to access and manage the secret. You manage access to the variable in \
  Permissions page.

restrictions=Restricts authentication from the specified network range. This can include: \
one or more IP addresses or one or more CIDR ranges. (e.g 172.17.0.3, 10.0.0.0/24)

role.members=Add roles to this role. The added roles are called \
members of the grant role. By adding member roles to the grant role, you grant all the privileges held by \
the grant role to the member roles. The member roles have all of the privileges of the grant role.

role.privileges=Permissions provides the authorization for \
roles to access resources. Permissions implements the Conjur RBAC model. \
The model uses roles to define the actors who need access and resources to define the objects to access.

annotations=Annotations on a user resource are optional and customizable. \
Custom annotations provide a way to store meta data about a resource.<br>Annotations are useful for \
human users and automated processing. Conjur API calls can retrieve annotation values from the \
Conjur database.

host_factory=A host-factory service automatically creates hosts and enrolls them into one or \
more layers. Creating a host-factory resource creates the service. It also identifies the layers that \
the service should use for enrolling the hosts it creates. Hosts are created and deleted by the service. \
You control privileges of those hosts by managing the layers.

host_factory.layers=The layers created for this host-factory service. Each automatically created host is \
granted membership into a layer.



